package com.yc.blog.dao;

import com.yc.blog.bean.Flink;
import com.yc.blog.bean.FlinkExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FlinkMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @SelectProvider(type=FlinkSqlProvider.class, method="countByExample")
    long countByExample(FlinkExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @DeleteProvider(type=FlinkSqlProvider.class, method="deleteByExample")
    int deleteByExample(FlinkExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @Delete({
        "delete from flink",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @Insert({
        "insert into flink (name, url, ",
        "img, description, ",
        "status, sort)",
        "values (#{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, ",
        "#{img,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER})"
    })
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insert(Flink record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @InsertProvider(type=FlinkSqlProvider.class, method="insertSelective")
    @SelectKey(statement="SELECT LAST_INSERT_ID()", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(Flink record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @SelectProvider(type=FlinkSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.INTEGER)
    })
    List<Flink> selectByExample(FlinkExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @Select({
        "select",
        "id, name, url, img, description, status, sort",
        "from flink",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="img", property="img", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="sort", property="sort", jdbcType=JdbcType.INTEGER)
    })
    Flink selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @UpdateProvider(type=FlinkSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Flink record, @Param("example") FlinkExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @UpdateProvider(type=FlinkSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Flink record, @Param("example") FlinkExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @UpdateProvider(type=FlinkSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Flink record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table flink
     *
     * @mbg.generated Wed Aug 14 20:21:19 CST 2019
     */
    @Update({
        "update flink",
        "set name = #{name,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR},",
          "img = #{img,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "sort = #{sort,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Flink record);
}